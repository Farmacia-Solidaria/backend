version: '3.9'
services: 
    gateway: 
        image: farmacia-solidaria/gateway:latest
        restart: unless-stopped
        environment:
            - SERVICE_ADDR=0.0.0.0
            - SERVICE_PORT=8000
        ports: 
            - 8000:8000
        depends_on: 
            - kafka
            - zookeeper

    users:
        image: farmacia-solidaria/users:latest
        environment: 
            - SERVICE_PORT=8001

    login:
        image: farmacia-solidaria/login:latest
        environment: 
            - SERVICE_PORT=8001
    
    products:
        image: farmacia-solidaria/products:latest
        environment: 
            - SERVICE_PORT=8001

    postgres:
        image: postgres
        restart: always
        environment:
            - POSTGRES_DB=farmacia-solidaria
            - POSTGRES_PASSWORD=root
            - POSTGRES_USER=root
        volumes:
            - ./data/postgres-data:/var/lib/postgresql/data

    # kafka-handler:
    #     image: farmacia-solidaria/kafka-handler:latest
    #     command: python server.py
    #     restart: unless-stopped
    #     depends_on: 
    #         - kafka
    
    zookeeper:
        image: 'bitnami/zookeeper:latest'
        user: root
        restart: unless-stopped
        environment: 
            - ZOO_PORT_NUMBER=2181
            - ALLOW_ANONYMOUS_LOGIN=yes # TODO: Configure properly zookeeper
        volumes: 
            - ./data/zookeeper-data:/bitnami/zookeeper

    kafka:
        image: bitnami/kafka:latest
        user: root
        restart: unless-stopped
        environment:
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes # TODO: Configure properly kafka listeners
        volumes:
            - ./data/kafka-data:/bitnami/kafka
        depends_on: 
            -  zookeeper
        
    # redis:
    #     image: redis
    #     restart: always

    # queue:
    #     build:
    #         context: .
    #         dockerfile: Dockerfile
    #     command: 'python consumer.py'
    #     depends_on: 
    #         - db
    # db:
    #     image: mysql:5.7.22
    #     restart: always
    #     environment: 
    #         MYSQL_DATABASE: admin
    #         MYSQL_USER: root
    #         MYSQL_PASSWORD: root
    #         MYSQL_ROOT_PASSWORD: root
    #     volumes:
    #         - .dbdata:/var/lib/mysql
    #     ports:
    #         - 33066:3306